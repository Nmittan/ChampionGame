///DebugController()

show_debug_message("a pressed " + string(global.c0_a_pressed));
show_debug_message("a released " + string(global.c0_a_released));
show_debug_message("a held " + string(global.c0_a_held));
show_debug_message("b pressed " + string(global.c0_b_pressed));
show_debug_message("b released " + string(global.c0_b_released));
show_debug_message("b held " + string(global.c0_b_held));
show_debug_message("x pressed " + string(global.c0_x_pressed));
show_debug_message("x released " + string(global.c0_x_released));
show_debug_message("x held " + string(global.c0_x_held));
show_debug_message("y pressed " + string(global.c0_y_pressed));
show_debug_message("y released " + string(global.c0_y_released));
show_debug_message("y held " + string(global.c0_y_held));
show_debug_message("dpadup pressed " + string(global.c0_dpadup_pressed));
show_debug_message("dpadup released " + string(global.c0_dpadup_released));
show_debug_message("dpadup held " + string(global.c0_dpadup_held));
show_debug_message("dpaddown pressed " + string(global.c0_dpaddown_pressed));
show_debug_message("dpaddown released " + string(global.c0_dpaddown_released));
show_debug_message("dpaddown held " + string(global.c0_dpaddown_held));
show_debug_message("dpadleft pressed " + string(global.c0_dpadleft_pressed));
show_debug_message("dpadleft released " + string(global.c0_dpadleft_released));
show_debug_message("dpadleft held " + string(global.c0_dpadleft_held));
show_debug_message("dpadright pressed " + string(global.c0_dpadright_pressed));
show_debug_message("dpadright released " + string(global.c0_dpadright_released));
show_debug_message("dpadright held " + string(global.c0_dpadright_held));
show_debug_message("rtrigger pressed " + string(global.c0_rtrigger_pressed));
show_debug_message("rtrigger released " + string(global.c0_rtrigger_released));
show_debug_message("rtrigger held " + string(global.c0_rtrigger_held));
show_debug_message("rbumper pressed " + string(global.c0_rbumper_pressed));
show_debug_message("rbumper released " + string(global.c0_rbumper_released));
show_debug_message("rbumper held " + string(global.c0_rbumper_held));
show_debug_message("ltrigger pressed " + string(global.c0_ltrigger_pressed));
show_debug_message("ltrigger released " + string(global.c0_ltrigger_released));
show_debug_message("ltrigger held " + string(global.c0_ltrigger_held));
show_debug_message("lbumper pressed " + string(global.c0_lbumper_pressed));
show_debug_message("lbumper released " + string(global.c0_lbumper_released ));
show_debug_message("lbumper held " + string(global.c0_lbumper_held));
show_debug_message("lstick haxis " + string(global.c0_lhaxis));
show_debug_message("lstick vaxis " + string(global.c0_lvaxis));
show_debug_message("lstick pressed " + string(global.c0_lstick_pressed));
show_debug_message("lstick released " + string(global.c0_lstick_released));
show_debug_message("lstick held " + string(global.c0_lstick_held));
show_debug_message("rstick haxis " + string(global.c0_rhaxis));
show_debug_message("rstick vaxis " + string(global.c0_rvaxis));
show_debug_message("rstick pressed " + string(global.c0_rstick_pressed));
show_debug_message("rstick released " + string(global.c0_rstick_released));
show_debug_message("rstick held " + string(global.c0_rstick_held));
show_debug_message("select pressed " + string(global.c0_select_pressed));
show_debug_message("select released " + string(global.c0_select_released));
show_debug_message("select held " + string(global.c0_select_held));
show_debug_message("start pressed " + string(global.c0_start_pressed));
show_debug_message("start released " + string(global.c0_start_released));
show_debug_message("start held " + string(global.c0_start_held));
show_debug_message("--------------------------------------------------");